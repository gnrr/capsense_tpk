;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME:   CSD_1.inc
;;   Version: 1.70, Updated on 2011/12/1 at 17:22:2
;;  Generated by PSoC Designer 5.2.2401
;;
;;  DESCRIPTION:
;;    Assembler declarations for the CSD user module interface.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

CSD_1_WITH_PWM:                        equ 0h
CSD_1_REF_VALUE:                       equ 0x2
CSD_1_FEEDBACK_PIN:                    equ 0x1
CSD_1_FEEDBACK_P1_1:                   equ 0x00
CSD_1_FEEDBACK_P3_1:                   equ 0x01
CSD_1_FEEDBACK_P1_5:                   equ 0x02
CSD_1_FEEDBACK_P1_4:                   equ 0x04
CSD_1_FEEDBACK_P1_0:                   equ 0x08
CSD_1_FEEDBACK_P3_0:                   equ 0x10

CSD_1_CAPACITOR_PIN:                   equ 2
CSD_1_CAPACITOR_P0_1:                  equ 1
CSD_1_CAPACITOR_P0_3:                  equ 2

CSD_1_AUTORESET:                       equ 1

;--------------------------------------------------
; Constants for Scan Speed values
;--------------------------------------------------
CSD_1_ULTRA_FAST_SPEED:                  equ 0x00
CSD_1_FAST_SPEED:                        equ 0x01
CSD_1_NORMAL_SPEED:                      equ 0x02
CSD_1_SLOW_SPEED:                        equ 0x03

;--------------------------------------------------
; Constants for Resolution values
;--------------------------------------------------
CSD_1_MIN_RESOLUTION:                  equ 9
CSD_1_9_BIT_RESOLUTION:                equ 9
CSD_1_10_BIT_RESOLUTION:               equ 10
CSD_1_11_BIT_RESOLUTION:               equ 11
CSD_1_12_BIT_RESOLUTION:               equ 12
CSD_1_13_BIT_RESOLUTION:               equ 13
CSD_1_14_BIT_RESOLUTION:               equ 14
CSD_1_15_BIT_RESOLUTION:               equ 15
CSD_1_16_BIT_RESOLUTION:               equ 16
CSD_1_MAX_RESOLUTION:                  equ 16

;--------------------------------------------------
; Constants for CSD_1 API's
;--------------------------------------------------

CSD_1_ButtonCount:                     equ 2h
CSD_1_SliderCount:                     equ 0h  + 0h
CSD_1_TotalSensorCount:                equ 2h

CSD_1_BUTTONS_EXIST:                   equ 2h
CSD_1_SLIDERS_EXIST:                   equ 0h | 0h

CSD_1_HYSTERESIS:                                equ ah
CSD_1_Debounce:                                  equ 3h
CSD_1_LowBaselineReset:                          equ 32h

CSD_1_FINGER_THRESHOLD:                          equ 28h
CSD_1_NOISE_THRESHOLD:                           equ 14h
CSD_1_NEGATIVE_NOISE_THRESHOLD:                  equ 14h
CSD_1_BASELINE_UPDATE_THRESHOLD:                 equ c8h

CSD_1_DiplexUsed:                      equ 0

;--------------------------------------------------
; Registers Address Constants for CSD_1
;--------------------------------------------------

CSD_1_CNT_FUNC_REG:                    equ 20h              ; CNT Function Reg
CSD_1_CNT_IN_REG:                      equ 21h              ; CNT Input Reg
CSD_1_CNT_OUT_REG:                     equ 22h              ; CNT Output Reg
CSD_1_CNT_COUNTER_REG:                 equ 20h              ; CNT Counter Reg
CSD_1_CNT_PERIOD_REG:                  equ 21h              ; CNT Period Reg
CSD_1_CNT_COMPARE_REG:                 equ 22h              ; CNT Compare Reg
CSD_1_CNT_CONTROL_REG:                 equ 23h              ; CNT Control Reg

CSD_1_PRS_FUNC_LSB_REG:                equ 24h              ; PRS LSB Function Reg
CSD_1_PRS_IN_LSB_REG:                  equ 25h              ; PRS LSB Input Reg
CSD_1_PRS_OUT_LSB_REG:                 equ 26h              ; PRS LSB Output Reg
CSD_1_PRS_CONTROL_LSB_REG:             equ 27h              ; PRS LSB Control Reg
CSD_1_PRS_SHIFT_LSB_REG:               equ 24h              ; PRS LSB Shift Reg
CSD_1_PRS_POLY_LSB_REG:                equ 25h              ; PRS LSB Polynomial Reg
CSD_1_PRS_SEED_LSB_REG:                equ 26h              ; PRS LSB Seed Reg

CSD_1_PRS_FUNC_MSB_REG:                equ 28h              ; PRS MSB Function Reg
CSD_1_PRS_IN_MSB_REG:                  equ 29h              ; PRS MSB Input Reg
CSD_1_PRS_OUT_MSB_REG:                 equ 2ah              ; PRS MSB Output Reg
CSD_1_PRS_CONTROL_MSB_REG:             equ 2bh              ; PRS MSB Control Reg
CSD_1_PRS_SHIFT_MSB_REG:               equ 28h              ; PRS MSB Shift Reg
CSD_1_PRS_POLY_MSB_REG:                equ 29h              ; PRS MSB Polynimial Reg
CSD_1_PRS_SEED_MSB_REG:                equ 2ah              ; PRS MSB Seed Reg

CSD_1_ACE_CONTROL1_REG:                equ 76h              ; CMP Control Reg
CSD_1_ACE_CONTROL2_REG:                equ 77h              ; CMP Control Reg

CSD_1_ASE_CONTROL_REG:                 equ 84h              ; CMP_REF Conrol Reg
CSD_1_ADC_TRIM_REG:                    equ e6h              ; ADC Trim Register
CSD_1_ADC_CONTROL_REG:                 equ 69h              ; ADC Control Reg


DR_OFFSET:                             equ 00h
DM0_OFFSET:                            equ 00h              ; Bank 1
DM1_OFFSET:                            equ 01h              ; Bank 1
DM2_OFFSET:                            equ 03h              ; Bank 0
MUX_OFFSET:                            equ MUX_CR0          ; Bank 1

;--------------------------------------------------
; CSD_1 Macro 'Functions'
;--------------------------------------------------

macro CSD_1_Counter_Start_M
   or    reg[CSD_1_CNT_CONTROL_REG],  CSD_1_CNT_CONTROL_REG_START_BIT
endm

macro CSD_1_Counter_Stop_M
   and   reg[CSD_1_CNT_CONTROL_REG], ~CSD_1_CNT_CONTROL_REG_START_BIT
endm

macro CSD_1_Counter_EnableInt_M
   M8C_EnableIntMask CSD_1_CNT_INT_REG, CSD_1_CNT_INT_MASK
endm

macro CSD_1_Counter_DisableInt_M
   M8C_DisableIntMask CSD_1_CNT_INT_REG, CSD_1_CNT_INT_MASK
endm

;--------------------------------------------------
; Constants for CSD_CMP API's
;--------------------------------------------------
CSD_1_CMP_CMPIntReg:                     equ  0e0h
CSD_1_CMP_CMPIntMask:                    equ  04h

CSD_1_CMP_OFF:                           equ  0
CSD_1_CMP_ON:                            equ  1

;--------------------------------------------------
; Constants for CSD_Counter API's.
;--------------------------------------------------

CSD_1_CNT_CONTROL_REG_START_BIT:       equ 0x01             ; Control register start bit
CSD_1_CNT_INT_REG:                     equ 0x0e1
CSD_1_CNT_INT_MASK:                    equ 0x01

;--------------------------------------------------
; Constants for CSD_Counter user defined values
;--------------------------------------------------

CSD_1_CNT_PERIOD:                      equ 0xff
CSD_1_CNT_COMPARE_VALUE:               equ 0x00

; end of file CSD_1.inc
